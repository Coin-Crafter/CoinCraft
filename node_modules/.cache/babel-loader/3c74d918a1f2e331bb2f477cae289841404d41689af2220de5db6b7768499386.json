{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akash\\\\Desktop\\\\Term 7\\\\Blockchain Technology\\\\CoinCraft\\\\src\\\\app\\\\YourProjects\\\\yourprojects.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./yourprojects.css\";\nimport { BrowserProvider, Contract } from \"ethers\";\nimport contractABI from \"../../contract/contractABI.json\";\nimport { contractAddress } from \"../../contract/contractAddress\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectsPage = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"client\");\n  const [clientProjects, setClientProjects] = useState([]);\n  const [freelancerProjects, setFreelancerProjects] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\"\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const VERIFICATION_FEE = \"0.0005\";\n\n  // Load projects from the blockchain\n  const loadProjects = async () => {\n    try {\n      if (!window.ethereum) {\n        alert(\"MetaMask is not installed!\");\n        return;\n      }\n      const provider = new BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = new Contract(contractAddress, contractABI, signer);\n\n      // Get the connected wallet address\n      const walletAddress = await signer.getAddress();\n\n      // Fetch projects for this wallet address\n      const blockchainProjects = await contract.getProjectsByAddress(walletAddress);\n\n      // Map blockchain data to local state structure\n      const loadedProjects = blockchainProjects.map((project, index) => ({\n        id: index + 1,\n        title: project.name,\n        description: project.description,\n        status: \"In Progress\",\n        expanded: false\n      }));\n\n      // Set state with loaded projects\n      setClientProjects(loadedProjects);\n    } catch (error) {\n      console.error(\"Error loading projects:\", error);\n    }\n  };\n\n  // Call loadProjects on component mount\n  useEffect(() => {\n    loadProjects();\n  }, []);\n  const toggleExpand = id => {\n    const updateProjects = prevProjects => prevProjects.map(project => project.id === id ? {\n      ...project,\n      expanded: !project.expanded\n    } : project);\n    if (activeTab === \"client\") {\n      setClientProjects(updateProjects(clientProjects));\n    } else {\n      setFreelancerProjects(updateProjects(freelancerProjects));\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleCreateProject = async () => {\n    if (!formData.name || !formData.description || !formData.projectFee) {\n      alert(\"Please fill in all fields, including the project fee.\");\n      return;\n    }\n    try {\n      if (!window.ethereum) {\n        alert(\"MetaMask is not installed!\");\n        return;\n      }\n      setIsLoading(true);\n      const provider = new BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = new Contract(contractAddress, contractABI, signer);\n      const projectFeeInWei = ethers.parseEther(formData.projectFee);\n      const timestamp = Math.floor(Date.now() / 1000);\n\n      // Create a project without locking fees\n      const tx = await contract.createProject(formData.name, formData.description, timestamp, projectFeeInWei);\n      await tx.wait();\n      alert(\"Project created successfully! Funds can be transferred later.\");\n      loadProjects(); // Refresh projects\n\n      setFormData({\n        name: \"\",\n        description: \"\",\n        projectFee: \"\"\n      });\n      setShowModal(false);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(\"Error creating project:\", error);\n      alert(\"Error creating project. Please try again.\");\n      setIsLoading(false);\n    }\n  };\n  const handleTransferFunds = async (projectId, freelancerAddress, projectFee, verificationFee) => {\n    try {\n      if (!window.ethereum) {\n        alert(\"MetaMask is not installed!\");\n        return;\n      }\n      const provider = new BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = new Contract(contractAddress, contractABI, signer);\n      const totalFee = ethers.parseEther((parseFloat(projectFee) + parseFloat(verificationFee)).toString());\n\n      // Transfer funds to the freelancer\n      const tx = await contract.transferFunds(projectId, freelancerAddress, {\n        value: totalFee\n      });\n      await tx.wait();\n      alert(\"Funds transferred successfully!\");\n      loadProjects(); // Refresh projects\n    } catch (error) {\n      console.error(\"Error transferring funds:\", error);\n      alert(\"Error transferring funds. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"projects-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"View and manage your ongoing projects as a Client or Freelancer.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === \"client\" ? \"active\" : \"\"}`,\n        onClick: () => setActiveTab(\"client\"),\n        children: \"As a Client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === \"freelancer\" ? \"active\" : \"\"}`,\n        onClick: () => setActiveTab(\"freelancer\"),\n        children: \"As a Freelancer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), activeTab === \"client\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-button\",\n        onClick: () => setShowModal(true),\n        children: \"+ Create a New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"yprojects-list\",\n      children: (activeTab === \"client\" ? clientProjects : freelancerProjects).map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `yprojects-card ${project.expanded ? \"expanded-card\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"yprojects-header\",\n          onClick: () => toggleExpand(project.id),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"yexpand-button\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons\",\n              children: project.expanded ? \"expand_less\" : \"expand_more\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), project.expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"yprojects-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", project.isTransferred ? \"Completed\" : \"Pending Transfer\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this), !project.isTransferred && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter Freelancer Address\",\n              value: project.freelancerAddress || \"\",\n              onChange: e => setClientProjects(prevProjects => prevProjects.map(p => p.id === project.id ? {\n                ...p,\n                freelancerAddress: e.target.value\n              } : p))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"transfer-funds-button\",\n              onClick: () => handleTransferFunds(project.id, project.freelancerAddress,\n              // User-provided address\n              project.projectFee, VERIFICATION_FEE),\n              disabled: !project.freelancerAddress // Disable if no address entered\n              ,\n              children: \"Transfer Funds\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Project Name\",\n          value: formData.name,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"projectFee\",\n          placeholder: \"Project Fee (ETH)\",\n          value: formData.projectFee || \"\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"description\",\n          placeholder: \"Project Description\",\n          value: formData.description,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Verification Fee: \", VERIFICATION_FEE, \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCreateProject,\n            disabled: isLoading,\n            children: isLoading ? \"Submitting...\" : \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectsPage, \"ksOcyYtkj8o4m8c9fPoLNnNLai4=\");\n_c = ProjectsPage;\nexport default ProjectsPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectsPage\");","map":{"version":3,"names":["React","useState","useEffect","BrowserProvider","Contract","contractABI","contractAddress","ethers","jsxDEV","_jsxDEV","ProjectsPage","_s","activeTab","setActiveTab","clientProjects","setClientProjects","freelancerProjects","setFreelancerProjects","showModal","setShowModal","formData","setFormData","name","description","isLoading","setIsLoading","VERIFICATION_FEE","loadProjects","window","ethereum","alert","provider","signer","getSigner","contract","walletAddress","getAddress","blockchainProjects","getProjectsByAddress","loadedProjects","map","project","index","id","title","status","expanded","error","console","toggleExpand","updateProjects","prevProjects","handleInputChange","e","value","target","prev","handleCreateProject","projectFee","projectFeeInWei","parseEther","timestamp","Math","floor","Date","now","tx","createProject","wait","handleTransferFunds","projectId","freelancerAddress","verificationFee","totalFee","parseFloat","toString","transferFunds","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isTransferred","type","placeholder","onChange","p","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Akash/Desktop/Term 7/Blockchain Technology/CoinCraft/src/app/YourProjects/yourprojects.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./yourprojects.css\";\r\nimport { BrowserProvider, Contract } from \"ethers\";\r\nimport contractABI from \"../../contract/contractABI.json\";\r\nimport { contractAddress } from \"../../contract/contractAddress\";\r\nimport { ethers } from \"ethers\";\r\n\r\nconst ProjectsPage = () => {\r\n  const [activeTab, setActiveTab] = useState(\"client\");\r\n  const [clientProjects, setClientProjects] = useState([]);\r\n  const [freelancerProjects, setFreelancerProjects] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [formData, setFormData] = useState({ name: \"\", description: \"\" });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const VERIFICATION_FEE = \"0.0005\";\r\n\r\n  // Load projects from the blockchain\r\n  const loadProjects = async () => {\r\n    try {\r\n      if (!window.ethereum) {\r\n        alert(\"MetaMask is not installed!\");\r\n        return;\r\n      }\r\n\r\n      const provider = new BrowserProvider(window.ethereum);\r\n      const signer = await provider.getSigner();\r\n      const contract = new Contract(contractAddress, contractABI, signer);\r\n\r\n      // Get the connected wallet address\r\n      const walletAddress = await signer.getAddress();\r\n\r\n      // Fetch projects for this wallet address\r\n      const blockchainProjects = await contract.getProjectsByAddress(walletAddress);\r\n\r\n      // Map blockchain data to local state structure\r\n      const loadedProjects = blockchainProjects.map((project, index) => ({\r\n        id: index + 1,\r\n        title: project.name,\r\n        description: project.description,\r\n        status: \"In Progress\",\r\n        expanded: false,\r\n      }));\r\n\r\n      // Set state with loaded projects\r\n      setClientProjects(loadedProjects);\r\n    } catch (error) {\r\n      console.error(\"Error loading projects:\", error);\r\n    }\r\n  };\r\n\r\n  // Call loadProjects on component mount\r\n  useEffect(() => {\r\n    loadProjects();\r\n  }, []);\r\n\r\n  const toggleExpand = (id) => {\r\n    const updateProjects = (prevProjects) =>\r\n      prevProjects.map((project) =>\r\n        project.id === id\r\n          ? { ...project, expanded: !project.expanded }\r\n          : project\r\n      );\r\n\r\n    if (activeTab === \"client\") {\r\n      setClientProjects(updateProjects(clientProjects));\r\n    } else {\r\n      setFreelancerProjects(updateProjects(freelancerProjects));\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleCreateProject = async () => {\r\n    if (!formData.name || !formData.description || !formData.projectFee) {\r\n      alert(\"Please fill in all fields, including the project fee.\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      if (!window.ethereum) {\r\n        alert(\"MetaMask is not installed!\");\r\n        return;\r\n      }\r\n  \r\n      setIsLoading(true);\r\n  \r\n      const provider = new BrowserProvider(window.ethereum);\r\n      const signer = await provider.getSigner();\r\n      const contract = new Contract(contractAddress, contractABI, signer);\r\n  \r\n      const projectFeeInWei = ethers.parseEther(formData.projectFee);\r\n      const timestamp = Math.floor(Date.now() / 1000);\r\n  \r\n      // Create a project without locking fees\r\n      const tx = await contract.createProject(\r\n        formData.name,\r\n        formData.description,\r\n        timestamp,\r\n        projectFeeInWei\r\n      );\r\n  \r\n      await tx.wait();\r\n  \r\n      alert(\"Project created successfully! Funds can be transferred later.\");\r\n      loadProjects(); // Refresh projects\r\n  \r\n      setFormData({ name: \"\", description: \"\", projectFee: \"\" });\r\n      setShowModal(false);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error creating project:\", error);\r\n      alert(\"Error creating project. Please try again.\");\r\n      setIsLoading(false);\r\n    }\r\n  };  \r\n\r\n  const handleTransferFunds = async (projectId, freelancerAddress, projectFee, verificationFee) => {\r\n    try {\r\n      if (!window.ethereum) {\r\n        alert(\"MetaMask is not installed!\");\r\n        return;\r\n      }\r\n  \r\n      const provider = new BrowserProvider(window.ethereum);\r\n      const signer = await provider.getSigner();\r\n      const contract = new Contract(contractAddress, contractABI, signer);\r\n  \r\n      const totalFee = ethers.parseEther(\r\n        (parseFloat(projectFee) + parseFloat(verificationFee)).toString()\r\n      );\r\n  \r\n      // Transfer funds to the freelancer\r\n      const tx = await contract.transferFunds(projectId, freelancerAddress, {\r\n        value: totalFee,\r\n      });\r\n  \r\n      await tx.wait();\r\n  \r\n      alert(\"Funds transferred successfully!\");\r\n      loadProjects(); // Refresh projects\r\n    } catch (error) {\r\n      console.error(\"Error transferring funds:\", error);\r\n      alert(\"Error transferring funds. Please try again.\");\r\n    }\r\n  };  \r\n\r\n  return (\r\n    <div className=\"projects-page\">\r\n      {/* Header Section */}\r\n      <header className=\"projects-header\">\r\n        <h1>Your Projects</h1>\r\n        <p>View and manage your ongoing projects as a Client or Freelancer.</p>\r\n      </header>\r\n\r\n      {/* Tabs Section */}\r\n      <div className=\"tabs\">\r\n        <button\r\n          className={`tab ${activeTab === \"client\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"client\")}\r\n        >\r\n          As a Client\r\n        </button>\r\n        <button\r\n          className={`tab ${activeTab === \"freelancer\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"freelancer\")}\r\n        >\r\n          As a Freelancer\r\n        </button>\r\n      </div>\r\n\r\n      {/* Create New Project Button */}\r\n      {activeTab === \"client\" && (\r\n        <div>\r\n          <button className=\"create-button\" onClick={() => setShowModal(true)}>\r\n            + Create a New Project\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Project List */}\r\n      {/* <div className=\"yprojects-list\">\r\n        {(activeTab === \"client\" ? clientProjects : freelancerProjects).map((project) => (\r\n          <div\r\n            key={project.id}\r\n            className={`yprojects-card ${\r\n              project.expanded ? \"expanded-card\" : \"\"\r\n            }`}\r\n          >\r\n            <div\r\n              className=\"yprojects-header\"\r\n              onClick={() => toggleExpand(project.id)}\r\n            >\r\n              <h3>{project.title}</h3>\r\n              <button className=\"yexpand-button\">\r\n                <span className=\"material-icons\">\r\n                  {project.expanded ? \"expand_less\" : \"expand_more\"}\r\n                </span>\r\n              </button>\r\n            </div>\r\n            {project.expanded && (\r\n              <div className=\"yprojects-details\">\r\n                <p>{project.description}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div> */}\r\n\r\n      <div className=\"yprojects-list\">\r\n        {(activeTab === \"client\" ? clientProjects : freelancerProjects).map((project) => (\r\n          <div\r\n            key={project.id}\r\n            className={`yprojects-card ${\r\n              project.expanded ? \"expanded-card\" : \"\"\r\n            }`}\r\n          >\r\n            <div\r\n              className=\"yprojects-header\"\r\n              onClick={() => toggleExpand(project.id)}\r\n            >\r\n              <h3>{project.title}</h3>\r\n              <button className=\"yexpand-button\">\r\n                <span className=\"material-icons\">\r\n                  {project.expanded ? \"expand_less\" : \"expand_more\"}\r\n                </span>\r\n              </button>\r\n            </div>\r\n            {project.expanded && (\r\n              <div className=\"yprojects-details\">\r\n                <p>{project.description}</p>\r\n                <p>Status: {project.isTransferred ? \"Completed\" : \"Pending Transfer\"}</p>\r\n\r\n                {/* Transfer Funds Section */}\r\n                {!project.isTransferred && (\r\n                  <div>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Freelancer Address\"\r\n                      value={project.freelancerAddress || \"\"}\r\n                      onChange={(e) =>\r\n                        setClientProjects((prevProjects) =>\r\n                          prevProjects.map((p) =>\r\n                            p.id === project.id\r\n                              ? { ...p, freelancerAddress: e.target.value }\r\n                              : p\r\n                          )\r\n                        )\r\n                      }\r\n                    />\r\n                    <button\r\n                      className=\"transfer-funds-button\"\r\n                      onClick={() =>\r\n                        handleTransferFunds(\r\n                          project.id,\r\n                          project.freelancerAddress, // User-provided address\r\n                          project.projectFee,\r\n                          VERIFICATION_FEE\r\n                        )\r\n                      }\r\n                      disabled={!project.freelancerAddress} // Disable if no address entered\r\n                    >\r\n                      Transfer Funds\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n\r\n\r\n      {/* Modal */}\r\n      {showModal && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h2>Create New Project</h2>\r\n\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Project Name\"\r\n              value={formData.name}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <input\r\n              type=\"text\"\r\n              name=\"projectFee\"\r\n              placeholder=\"Project Fee (ETH)\"\r\n              value={formData.projectFee || \"\"}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <textarea\r\n              name=\"description\"\r\n              placeholder=\"Project Description\"\r\n              value={formData.description}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <div>\r\n              <p>Verification Fee: {VERIFICATION_FEE} ETH</p>\r\n            </div>\r\n\r\n            <div className=\"modal-buttons\">\r\n              <button onClick={handleCreateProject} disabled={isLoading}>\r\n                {isLoading ? \"Submitting...\" : \"Submit\"}\r\n              </button>\r\n              <button onClick={() => setShowModal(false)}>Cancel</button>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}