{"ast":null,"code":"var _jsxFileName = \"/Users/jigneshmotwani/CoinCraft/src/app/Listing/listing.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport ProjectCard from \"./ProjectCard\"; // Import card component\nimport \"./listing.css\"; // Import styles\nimport ProjectManagerABI from \"../../contract/contractABI.json\";\nimport { contractAddress } from \"../../contract/contractAddress\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Listing() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const abi = ProjectManagerABI;\n  useEffect(() => {\n    const fetchOpenProjects = async () => {\n      try {\n        setLoading(true);\n\n        // Connect to the Ethereum provider\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n\n        // Get contract instance\n        const contract = new ethers.Contract(contractAddress, abi, signer);\n\n        // Fetch projects with status \"Open\"\n        const statusOpen = 0; // Enum value for \"Open\"\n        const openProjects = await contract.getProjectsByStatus(statusOpen);\n\n        // Map raw data into a readable format\n        const formattedProjects = openProjects.map(project => ({\n          title: project.name,\n          description: project.description,\n          stipend: ethers.formatUnits(project.stipend || \"0\", \"ether\")\n        }));\n        setProjects(formattedProjects);\n      } catch (error) {\n        console.error(\"Error fetching projects:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchOpenProjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"listing-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listing-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Open Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-grid\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading projects...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : projects.length > 0 ? projects.map((project, index) => /*#__PURE__*/_jsxDEV(ProjectCard, {\n        title: project.title,\n        description: project.description,\n        stipend: project.stipend\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No open projects available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Listing, \"OQ1VoVBkBYQ0DtEeE9la9LZgEb0=\");\n_c = Listing;\nexport default Listing;\nvar _c;\n$RefreshReg$(_c, \"Listing\");","map":{"version":3,"names":["React","useEffect","useState","ethers","ProjectCard","ProjectManagerABI","contractAddress","jsxDEV","_jsxDEV","Listing","_s","projects","setProjects","loading","setLoading","abi","fetchOpenProjects","provider","BrowserProvider","window","ethereum","signer","getSigner","contract","Contract","statusOpen","openProjects","getProjectsByStatus","formattedProjects","map","project","title","name","description","stipend","formatUnits","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","index","_c","$RefreshReg$"],"sources":["/Users/jigneshmotwani/CoinCraft/src/app/Listing/listing.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport ProjectCard from \"./ProjectCard\"; // Import card component\nimport \"./listing.css\"; // Import styles\nimport ProjectManagerABI from \"../../contract/contractABI.json\"; \nimport { contractAddress } from \"../../contract/contractAddress\";\n\nfunction Listing() {\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const abi = ProjectManagerABI;\n\n  useEffect(() => {\n    const fetchOpenProjects = async () => {\n      try {\n        setLoading(true);\n\n        // Connect to the Ethereum provider\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n\n        // Get contract instance\n        const contract = new ethers.Contract(contractAddress, abi, signer);\n\n        // Fetch projects with status \"Open\"\n        const statusOpen = 0; // Enum value for \"Open\"\n        const openProjects = await contract.getProjectsByStatus(statusOpen);\n\n        // Map raw data into a readable format\n        const formattedProjects = openProjects.map((project) => ({\n          title: project.name,\n          description: project.description,\n          stipend: ethers.formatUnits(project.stipend || \"0\", \"ether\"),\n        }));\n\n        setProjects(formattedProjects);\n      } catch (error) {\n        console.error(\"Error fetching projects:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchOpenProjects();\n  }, []);\n\n  return (\n    <div className=\"listing-page\">\n      <div className=\"listing-header\">\n        <h1>Open Projects</h1>\n      </div>\n      <div className=\"project-grid\">\n        {loading ? (\n          <p>Loading projects...</p>\n        ) : projects.length > 0 ? (\n          projects.map((project, index) => (\n            <ProjectCard\n              key={index}\n              title={project.title}\n              description={project.description}\n              stipend={project.stipend}\n            />\n          ))\n        ) : (\n          <p>No open projects available.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Listing;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}